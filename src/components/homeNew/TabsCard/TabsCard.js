import React, { useState } from 'react';
import styles from './TabsCard.module.css';
import Image from 'next/image';
import { tabsData } from './TabsCardData'; // adjust path if needed
import Popup from '@/components/Global/Popup/Popup';
import Form from '@/components/Global/Form/Form';

const TabsCard = ({
    dataScience,
    radio,
    dataScienceCounselling,
  
    dataScienceGeneric,
    interstedInHide,
}) => {

  const [brochureLinks, setBrochureLinks] = useState();
  const [brochurePdfs, setBrochurePdfs] = useState();
    const [popups, setPopups] = useState(false);
    const [titleCourse, setTitleCourse] = useState();

  const [activeTabIndex, setActiveTabIndex] = useState(0);

    const svgcal = [
    <svg xmlns="http://www.w3.org/2000/svg" width="23" height="22" viewBox="0 0 23 22" fill="none">
    <g clip-path="url(#clip0_158_144)">
    <path d="M6.99762 0C7.20184 0 7.39769 0.0811248 7.5421 0.225528C7.6865 0.369931 7.76762 0.565783 7.76762 0.77V2.2099H16.0363V0.7799C16.0363 0.575683 16.1174 0.379831 16.2619 0.235428C16.4063 0.0910248 16.6021 0.0099 16.8063 0.0099C17.0105 0.0099 17.2064 0.0910248 17.3508 0.235428C17.4952 0.379831 17.5763 0.575683 17.5763 0.7799V2.2099H20.5573C21.1406 2.2099 21.7 2.44153 22.1126 2.85388C22.5251 3.26622 22.757 3.82551 22.7573 4.4088V19.8011C22.757 20.3844 22.5251 20.9437 22.1126 21.356C21.7 21.7684 21.1406 22 20.5573 22H2.95732C2.37404 22 1.81463 21.7684 1.40208 21.356C0.98953 20.9437 0.757616 20.3844 0.757324 19.8011L0.757324 4.4088C0.757616 3.82551 0.98953 3.26622 1.40208 2.85388C1.81463 2.44153 2.37404 2.2099 2.95732 2.2099H6.22762V0.7689C6.22792 0.564874 6.30917 0.369304 6.45354 0.225139C6.59791 0.0809736 6.7936 -2.0819e-07 6.99762 0ZM2.29732 8.5162V19.8011C2.29732 19.8878 2.3144 19.9736 2.34756 20.0537C2.38073 20.1337 2.42935 20.2065 2.49063 20.2678C2.55192 20.3291 2.62468 20.3777 2.70475 20.4109C2.78483 20.444 2.87065 20.4611 2.95732 20.4611H20.5573C20.644 20.4611 20.7298 20.444 20.8099 20.4109C20.89 20.3777 20.9627 20.3291 21.024 20.2678C21.0853 20.2065 21.1339 20.1337 21.1671 20.0537C21.2003 19.9736 21.2173 19.8878 21.2173 19.8011V8.5316L2.29732 8.5162ZM8.09102 16.0809V17.9135H6.25732V16.0809H8.09102ZM12.6736 16.0809V17.9135H10.841V16.0809H12.6736ZM17.2573 16.0809V17.9135H15.4236V16.0809H17.2573ZM8.09102 11.7062V13.5388H6.25732V11.7062H8.09102ZM12.6736 11.7062V13.5388H10.841V11.7062H12.6736ZM17.2573 11.7062V13.5388H15.4236V11.7062H17.2573ZM6.22762 3.7488H2.95732C2.87065 3.7488 2.78483 3.76587 2.70475 3.79904C2.62468 3.83221 2.55192 3.88082 2.49063 3.94211C2.42935 4.0034 2.38073 4.07615 2.34756 4.15623C2.3144 4.2363 2.29732 4.32213 2.29732 4.4088V6.9773L21.2173 6.9927V4.4088C21.2173 4.32213 21.2003 4.2363 21.1671 4.15623C21.1339 4.07615 21.0853 4.0034 21.024 3.94211C20.9627 3.88082 20.89 3.83221 20.8099 3.79904C20.7298 3.76587 20.644 3.7488 20.5573 3.7488H17.5763V4.7707C17.5763 4.97492 17.4952 5.17077 17.3508 5.31517C17.2064 5.45958 17.0105 5.5407 16.8063 5.5407C16.6021 5.5407 16.4063 5.45958 16.2619 5.31517C16.1174 5.17077 16.0363 4.97492 16.0363 4.7707V3.7488H7.76762V4.7608C7.76762 4.96502 7.6865 5.16087 7.5421 5.30527C7.39769 5.44968 7.20184 5.5308 6.99762 5.5308C6.79341 5.5308 6.59756 5.44968 6.45315 5.30527C6.30875 5.16087 6.22762 4.96502 6.22762 4.7608V3.7488Z" fill="#5E5E5E"/>
    </g>
    <defs>
    <clipPath id="clip0_158_144">
    <rect width="22" height="22" fill="white" transform="translate(0.757324)"/>
    </clipPath>
    </defs>
    </svg>
        ]
    const svgcer = [
    <svg xmlns="http://www.w3.org/2000/svg" width="26" height="30" viewBox="0 0 31 30" fill="none">
      <path d="M15.5229 15.9375C15.5229 16.124 15.4489 16.3028 15.317 16.4347C15.1851 16.5665 15.0063 16.6406 14.8198 16.6406H9.19482C9.00834 16.6406 8.8295 16.5665 8.69764 16.4347C8.56578 16.3028 8.4917 16.124 8.4917 15.9375C8.4917 15.751 8.56578 15.5722 8.69764 15.4403C8.8295 15.3085 9.00834 15.2344 9.19482 15.2344H14.8198C15.0063 15.2344 15.1851 15.3085 15.317 15.4403C15.4489 15.5722 15.5229 15.751 15.5229 15.9375ZM14.8198 11.4844H9.19482C9.00834 11.4844 8.8295 11.5585 8.69764 11.6903C8.56578 11.8222 8.4917 12.001 8.4917 12.1875C8.4917 12.374 8.56578 12.5528 8.69764 12.6847C8.8295 12.8165 9.00834 12.8906 9.19482 12.8906H14.8198C15.0063 12.8906 15.1851 12.8165 15.317 12.6847C15.4489 12.5528 15.5229 12.374 15.5229 12.1875C15.5229 12.001 15.4489 11.8222 15.317 11.6903C15.1851 11.5585 15.0063 11.4844 14.8198 11.4844ZM27.7104 18.8227V26.25C27.7107 26.3736 27.6785 26.495 27.6169 26.6021C27.5553 26.7092 27.4665 26.7982 27.3596 26.8601C27.2527 26.922 27.1313 26.9547 27.0077 26.9547C26.8842 26.9548 26.7628 26.9223 26.6558 26.8605L23.7261 25.1848L20.7964 26.8605C20.6894 26.9223 20.568 26.9548 20.4444 26.9547C20.3209 26.9547 20.1995 26.922 20.0926 26.8601C19.9856 26.7982 19.8969 26.7092 19.8353 26.6021C19.7737 26.495 19.7414 26.3736 19.7417 26.25V23.2031H5.44482C5.0097 23.2031 4.5924 23.0303 4.28473 22.7226C3.97705 22.4149 3.8042 21.9976 3.8042 21.5625V6.5625C3.8042 6.12738 3.97705 5.71008 4.28473 5.4024C4.5924 5.09473 5.0097 4.92188 5.44482 4.92188H26.0698C26.5049 4.92188 26.9222 5.09473 27.2299 5.4024C27.5376 5.71008 27.7104 6.12738 27.7104 6.5625V10.2398C28.3017 10.7874 28.7735 11.4512 29.0961 12.1897C29.4187 12.9282 29.5853 13.7254 29.5853 14.5312C29.5853 15.3371 29.4187 16.1343 29.0961 16.8728C28.7735 17.6113 28.3017 18.2751 27.7104 18.8227ZM23.7261 10.0781C22.8453 10.0781 21.9844 10.3393 21.2521 10.8286C20.5197 11.3179 19.949 12.0134 19.6119 12.8271C19.2749 13.6408 19.1867 14.5362 19.3585 15.4C19.5303 16.2638 19.9545 17.0573 20.5772 17.6801C21.2 18.3029 21.9935 18.727 22.8573 18.8988C23.7211 19.0706 24.6165 18.9824 25.4302 18.6454C26.2439 18.3084 26.9394 17.7376 27.4287 17.0053C27.918 16.273 28.1792 15.412 28.1792 14.5312C28.1792 13.3502 27.71 12.2175 26.8749 11.3824C26.0398 10.5473 24.9071 10.0781 23.7261 10.0781ZM19.7417 21.7969V18.8227C18.7157 17.8652 18.0675 16.5712 17.9148 15.1762C17.7622 13.7811 18.1154 12.3777 18.91 11.221C19.7047 10.0643 20.8882 9.23124 22.2451 8.87333C23.6021 8.51543 25.0424 8.65643 26.3042 9.2707V6.5625C26.3042 6.50034 26.2795 6.44073 26.2356 6.39677C26.1916 6.35282 26.132 6.32812 26.0698 6.32812H5.44482C5.38266 6.32812 5.32305 6.35282 5.2791 6.39677C5.23514 6.44073 5.21045 6.50034 5.21045 6.5625V21.5625C5.21045 21.6247 5.23514 21.6843 5.2791 21.7282C5.32305 21.7722 5.38266 21.7969 5.44482 21.7969H19.7417ZM26.3042 19.7918C25.5019 20.1858 24.6199 20.3907 23.7261 20.3907C22.8322 20.3907 21.9503 20.1858 21.1479 19.7918V25.0383L23.3745 23.7645C23.4814 23.7027 23.6026 23.6703 23.7261 23.6703C23.8495 23.6703 23.9707 23.7027 24.0776 23.7645L26.3042 25.0383V19.7918Z" fill="#5E5E5E"/>
    </svg>
        ]






  const activeCards = tabsData[activeTabIndex].cards;

  return (
    <div className={styles.mainCard}>
            <Popup
              trigger={popups}
              setTrigger={setPopups}
              className="popupModal"
              downloadBrochure
            >
              <div className="leftPopup">
                <div
                  className="whiteP"
                  style={{ width: "340px", height: "400px" }}
                ></div>
              </div>
              <div className="RightPopup">
                <h5>Download Syllabus</h5>
                <Form
                  titleCourse={titleCourse}
                  brochureLink={brochureLinks}
                  brochurePdf={brochurePdfs}
                  dataScience={dataScience}
                  dataScienceCounselling={dataScienceCounselling}
                  dataScienceGeneric={dataScienceGeneric}
                  radio={radio}
                  downloadBrochure
                  upSkillingHide={true}
                  interstedInHide={interstedInHide}
                />
              </div>
            </Popup>
   <div className={styles.TabMain}>
  {tabsData.map((tab, index) => (
    <div
      key={index}
      onClick={() => setActiveTabIndex(index)}
      className={`${styles.tabItem} ${index === activeTabIndex ? styles.activeTab : ''}`}
    >
      <p>{tab.label}</p>
    </div>
  ))}
</div>


      <div className={styles.container}>
        {activeCards.map((card, idx) => (
          <div className={styles.cardDiv} key={idx}>
            <Image src={card.image} width={370} height={150} alt="program" loading="lazy" />
            <h3>{card.title}</h3>
            <ul className={styles.list}>
              <li>{svgcal} {card.duration}</li>
              <li>{svgcer} {card.certificate}</li>
            </ul>
            <hr  className={styles.hr}/>
            <div className={styles.btns}>
    <div className={styles.brcohureBtn}   onClick={() => {
                          setTitleCourse(card.titleCourse);
                          setBrochureLinks(card.brochureLinks);
                          setBrochurePdfs(card.brochurePdfs);
                          setPopups(true);
                        }}>
       
        <p>Brochure</p>
        <Image src="https://d32and0ii3b8oy.cloudfront.net/web/s3_main/new-UI/icon_arrow.webp"
        width={25} height={20} loading='lazy'/>
        </div>
              <button className={styles.viewbtn}>View Details</button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default TabsCard;
